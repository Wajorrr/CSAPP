# Execution begins at address 0
        .pos 0
        irmovq stack,%rsp # 设置栈指针
        call main # 执行main程序
        halt # 结束程序

# Sample linked list
        .align 8
ele1:
        .quad 0x00a 
        .quad ele2
ele2:
        .quad 0x0b0 
        .quad ele3
ele3:
        .quad 0xc00
        .quad 0

main:
        irmovq ele1,%rdi
        call sum_list
        ret

# long sum_list(list_ptr ls)
# %rdi 存放了参数 ls
sum_list:
        xorq %rax,%rax # sum=0
        jmp test
loop:
        mrmovq (%rdi),%rsi # rsi相当于temp，获取ls->val， 
        addq %rsi,%rax # add to sum
        mrmovq 8(%rdi),%rdi # 获取下一个地址
test:
        andq %rdi,%rdi # ls!=nullptr，stop when 0
        jne loop
        ret

# Stack starts here and grows to lower addresses 
        .pos 0x100
stack:
